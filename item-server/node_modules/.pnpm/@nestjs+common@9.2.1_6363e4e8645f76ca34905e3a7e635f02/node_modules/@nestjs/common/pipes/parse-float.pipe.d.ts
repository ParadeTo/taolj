import { ArgumentMetadata } from '.pnpm/@nestjs+common@9.2.1_6363e4e8645f76ca34905e3a7e635f02/node_modules/@nestjs/common';
import { PipeTransform } from '.pnpm/@nestjs+common@9.2.1_6363e4e8645f76ca34905e3a7e635f02/node_modules/@nestjs/common/interfaces/features/pipe-transform.interface';
import { ErrorHttpStatusCode } from '.pnpm/@nestjs+common@9.2.1_6363e4e8645f76ca34905e3a7e635f02/node_modules/@nestjs/common/utils/http-error-by-code.util';
export interface ParseFloatPipeOptions {
    errorHttpStatusCode?: ErrorHttpStatusCode;
    exceptionFactory?: (error: string) => any;
}
/**
 * Defines the built-in ParseFloat Pipe
 *
 * @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)
 *
 * @publicApi
 */
export declare class ParseFloatPipe implements PipeTransform<string> {
    protected exceptionFactory: (error: string) => any;
    constructor(options?: ParseFloatPipeOptions);
    /**
     * Method that accesses and performs optional transformation on argument for
     * in-flight requests.
     *
     * @param value currently processed route argument
     * @param metadata contains metadata about the currently processed route argument
     */
    transform(value: string, metadata: ArgumentMetadata): Promise<number>;
    /**
     * @param value currently processed route argument
     * @returns `true` if `value` is a valid float number
     */
    protected isNumeric(value: string): boolean;
}
